{"remainingRequest":"C:\\Users\\Hugo\\Documents\\Terrabionic\\Proyectos\\pwaClima\\pwaclima\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Hugo\\Documents\\Terrabionic\\Proyectos\\pwaClima\\pwaclima\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Hugo\\Documents\\Terrabionic\\Proyectos\\pwaClima\\pwaclima\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Hugo\\Documents\\Terrabionic\\Proyectos\\pwaClima\\pwaclima\\src\\components\\Temperatura.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Hugo\\Documents\\Terrabionic\\Proyectos\\pwaClima\\pwaclima\\src\\components\\Temperatura.vue","mtime":1635292067720},{"path":"C:\\Users\\Hugo\\Documents\\Terrabionic\\Proyectos\\pwaClima\\pwaclima\\babel.config.js","mtime":1635258813612},{"path":"C:\\Users\\Hugo\\Documents\\Terrabionic\\Proyectos\\pwaClima\\pwaclima\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Hugo\\Documents\\Terrabionic\\Proyectos\\pwaClima\\pwaclima\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Hugo\\Documents\\Terrabionic\\Proyectos\\pwaClima\\pwaclima\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Hugo\\Documents\\Terrabionic\\Proyectos\\pwaClima\\pwaclima\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdUZW1wZXJhdHVyYScsCiAgcHJvcHM6IHsKICAgIHRlbXBlcmF0dXJhOiBOdW1iZXIsCiAgICBzZW5zYWNpb246IE51bWJlciwKICAgIHRlbXBlcmF0dXJhTWF4OiBOdW1iZXIsCiAgICB0ZW1wZXJhdHVyYU1pbjogTnVtYmVyLAogICAgbm9tYnJlQ2l1ZGFkOiBTdHJpbmcsCiAgICBpY29ubzogTnVtYmVyCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZXNjYWxhOiAiQyIKICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgZ2V0TWV0cmljYTogZnVuY3Rpb24gZ2V0TWV0cmljYSgpIHsKICAgICAgcmV0dXJuIHRoaXMuZXNjYWxhOwogICAgfSwKICAgIHNlbkY6IGZ1bmN0aW9uIHNlbkYoKSB7CiAgICAgIHJldHVybiB0aGlzLmZhcmVuaGVpdCh0aGlzLnNlbnNhY2lvbik7CiAgICB9LAogICAgdGVtcEY6IGZ1bmN0aW9uIHRlbXBGKCkgewogICAgICByZXR1cm4gdGhpcy5mYXJlbmhlaXQodGhpcy50ZW1wZXJhdHVyYWEpOwogICAgfSwKICAgIG1heFRlbXBGOiBmdW5jdGlvbiBtYXhUZW1wRigpIHsKICAgICAgcmV0dXJuIHRoaXMuZmFyZW5oZWl0KHRoaXMudGVtcGVyYXR1cmFNYXgpOwogICAgfSwKICAgIG1pblRlbXBGOiBmdW5jdGlvbiBtaW5UZW1wRigpIHsKICAgICAgcmV0dXJuIHRoaXMuZmFyZW5oZWl0KHRoaXMudGVtcGVyYXR1cmFNaW4pOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgZmFyZW5oZWl0OiBmdW5jdGlvbiBmYXJlbmhlaXQodmFsb3IpIHsKICAgICAgcmV0dXJuIE1hdGgucm91bmQodmFsb3IgKiA1IC8gOSArIDMyKTsKICAgIH0sCiAgICBjYW1iaWFyTWV0cmljYTogZnVuY3Rpb24gY2FtYmlhck1ldHJpY2EoKSB7CiAgICAgIHRoaXMuZXNjYWxhID09PSAnQycgPyB0aGlzLmVzY2FsYSA9ICdGJyA6IHRoaXMuZXNjYWxhID0gJ0MnOwogICAgfQogIH0KfTs="},{"version":3,"sources":["Temperatura.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA,eAAA;AACA,EAAA,IAAA,EAAA,aADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,WAAA,EAAA,MADA;AAEA,IAAA,SAAA,EAAA,MAFA;AAGA,IAAA,cAAA,EAAA,MAHA;AAIA,IAAA,cAAA,EAAA,MAJA;AAKA,IAAA,YAAA,EAAA,MALA;AAMA,IAAA,KAAA,EAAA;AANA,GAFA;AAUA,EAAA,IAVA,kBAUA;AACA,WAAA;AACA,MAAA,MAAA,EAAA;AADA,KAAA;AAGA,GAdA;AAeA,EAAA,QAAA,EAAA;AACA,IAAA,UADA,wBACA;AACA,aAAA,KAAA,MAAA;AACA,KAHA;AAIA,IAAA,IAJA,kBAIA;AACA,aAAA,KAAA,SAAA,CAAA,KAAA,SAAA,CAAA;AACA,KANA;AAOA,IAAA,KAPA,mBAOA;AACA,aAAA,KAAA,SAAA,CAAA,KAAA,YAAA,CAAA;AACA,KATA;AAUA,IAAA,QAVA,sBAUA;AACA,aAAA,KAAA,SAAA,CAAA,KAAA,cAAA,CAAA;AACA,KAZA;AAaA,IAAA,QAbA,sBAaA;AACA,aAAA,KAAA,SAAA,CAAA,KAAA,cAAA,CAAA;AACA;AAfA,GAfA;AAgCA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,qBACA,KADA,EACA;AACA,aAAA,IAAA,CAAA,KAAA,CAAA,KAAA,GAAA,CAAA,GAAA,CAAA,GAAA,EAAA,CAAA;AACA,KAHA;AAKA,IAAA,cALA,4BAKA;AACA,WAAA,MAAA,KAAA,GAAA,GAAA,KAAA,MAAA,GAAA,GAAA,GAAA,KAAA,MAAA,GAAA,GAAA;AACA;AAPA;AAhCA,CAAA","sourcesContent":["<template>\r\n  <div class=\"temperatura\">\r\n        <img class=\"icono\" :src=icono>{{icono}}\r\n        <h2 class=\"icono\">icono:</h2>\r\n        <h2 class=\"nombreCiudad\">Ciudad: {{nombreCiudad}}</h2>\r\n        <hr>\r\n        <h3 class=\"temperaturaa\">Temperatura actual: {{(getMetrica === 'C')? temperatura: tempF}} °<a @click.prevent=\"cambiarMetrica\">{{escala}}</a></h3> \r\n        <h3 class=\"sensacion\">Sensacion térmica: {{(getMetrica === 'C')? sensacion : senF}} °{{escala}}</h3>\r\n        <h3 class=\"temperaturaMax\">Max: {{(getMetrica === 'C')? temperaturaMax : maxTempF}} °{{escala}}</h3>\r\n        <h3 class=\"temperaturaMin\">Min: {{(getMetrica === 'C')? temperaturaMin : minTempF}} °{{escala}}</h3>\r\n        \r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Temperatura',\r\n  props: {\r\n    temperatura: Number,\r\n    sensacion: Number,\r\n    temperaturaMax: Number,\r\n    temperaturaMin: Number,\r\n    nombreCiudad: String,\r\n    icono: Number\r\n  },\r\n  data(){\r\n    return{\r\n      escala: \"C\"\r\n    }\r\n  },\r\n  computed:{\r\n     getMetrica(){\r\n       return this.escala\r\n     },\r\n     senF(){\r\n       return this.farenheit(this.sensacion)\r\n     },\r\n      tempF(){\r\n        return this.farenheit(this.temperaturaa)\r\n      },\r\n      maxTempF(){\r\n        return this.farenheit(this.temperaturaMax)\r\n      },\r\n      minTempF(){\r\n        return this.farenheit(this.temperaturaMin)\r\n      }\r\n  },\r\n  methods:{\r\n    farenheit(valor){\r\n      return Math.round((valor * 5/9) + 32)\r\n    },\r\n\r\n    cambiarMetrica(){\r\n      (this.escala === 'C')? this.escala = 'F' : this.escala = 'C'\r\n    }\r\n  }\r\n\r\n\r\n}\r\n\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n\r\n</style>\r\n"],"sourceRoot":"src/components"}]}